name: Feature Test

on:
  push:
    branches:
    - feature/**
    - master

env:
  COVERALLS_PARALLEL: true
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  CUMULUSCI_KEY: ${{ secrets.CUMULUSCI_KEY }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install pre-commit
    - name: Run pre-commit on changed files
      run: |
        git fetch --depth=1 origin master
        pre-commit run --files $(git diff --diff-filter=d --name-only origin/master...HEAD)

  unit_tests:
    name: "Unit tests: Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "${{ matrix.python-version }}"
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install
      run: |
        python -m pip install -U pip
        pip install -r requirements_dev.txt
    - run: |
        coverage run $(which pytest)
        coveralls

  windows:
    name: "Unit Tests: Windows"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install
      run: |
        python -m pip install -U pip
        pip install -r requirements_dev.txt
    - name: pytest
      run: pytest

  robot_api:
    name: "Robot: No browser"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -r requirements_dev.txt
    - name: Install sfdx
      run: |
        mkdir sfdx
        wget -qO- https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz | tar xJ -C sfdx --strip-components 1
        ./sfdx/install
        echo $SFDX_HUB_KEY_BASE64 | base64 --decode > sfdx.key
        sfdx force:auth:jwt:grant --clientid $SFDX_CLIENT_ID --jwtkeyfile sfdx.key --username $SFDX_HUB_USERNAME --setdefaultdevhubusername -a hub
      env:
        SFDX_HUB_KEY_BASE64: ${{ secrets.SFDX_HUB_KEY_BASE64 }}
        SFDX_CLIENT_ID: ${{ secrets.SFDX_CLIENT_ID }}
        SFDX_HUB_USERNAME: ${{ secrets.SFDX_HUB_USERNAME }}
    - name: Run robot tests
      run: |
        coverage run --append $(which cci) task run robot \
          --org dev \
          -o name "CumulusCI" \
          -o suites cumulusci/robotframework/tests \
          -o include no-browser
    - name: Delete scratch org
      if: always()
      run: |
        cci org scratch_delete dev
    - name: Report coverage
      run: coveralls
    - name: Store robot results
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: robot
        path: robot/CumulusCI/results

  robot_ui_chrome:
    name: "Robot: Chrome"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -r requirements_dev.txt
    - name: Install sfdx
      run: |
        mkdir sfdx
        wget -qO- https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz | tar xJ -C sfdx --strip-components 1
        ./sfdx/install
        echo $SFDX_HUB_KEY_BASE64 | base64 --decode > sfdx.key
        sfdx force:auth:jwt:grant --clientid $SFDX_CLIENT_ID --jwtkeyfile sfdx.key --username $SFDX_HUB_USERNAME --setdefaultdevhubusername -a hub
      env:
        SFDX_HUB_KEY_BASE64: ${{ secrets.SFDX_HUB_KEY_BASE64 }}
        SFDX_CLIENT_ID: ${{ secrets.SFDX_CLIENT_ID }}
        SFDX_HUB_USERNAME: ${{ secrets.SFDX_HUB_USERNAME }}
    - name: Run robot tests
      run: |
        coverage run --append $(which cci) task run robot \
          --org dev \
          -o suites cumulusci/robotframework/tests/salesforce \
          -o exclude no-browser \
          -o vars BROWSER:headlesschrome
    - name: Delete scratch org
      if: always()
      run: |
        cci org scratch_delete dev
    - name: Report coverage
      run: coveralls
    - name: Store robot results
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: robot
        path: robot/CumulusCI/results

  robot_ui_firefox:
    name: "Robot: Firefox"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -r requirements_dev.txt
    - name: Install sfdx
      run: |
        mkdir sfdx
        wget -qO- https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz | tar xJ -C sfdx --strip-components 1
        ./sfdx/install
        echo $SFDX_HUB_KEY_BASE64 | base64 --decode > sfdx.key
        sfdx force:auth:jwt:grant --clientid $SFDX_CLIENT_ID --jwtkeyfile sfdx.key --username $SFDX_HUB_USERNAME --setdefaultdevhubusername -a hub
      env:
        SFDX_HUB_KEY_BASE64: ${{ secrets.SFDX_HUB_KEY_BASE64 }}
        SFDX_CLIENT_ID: ${{ secrets.SFDX_CLIENT_ID }}
        SFDX_HUB_USERNAME: ${{ secrets.SFDX_HUB_USERNAME }}
    - name: Run robot tests
      run: |
        coverage run --append $(which cci) task run robot \
          --org dev \
          -o suites cumulusci/robotframework/tests/salesforce \
          -o exclude no-browser \
          -o vars BROWSER:headlessfirefox
    - name: Delete scratch org
      if: always()
      run: |
        cci org scratch_delete dev
    - name: Report coverage
      run: coveralls
    - name: Store robot results
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: robot
        path: robot/CumulusCI/results

  robot_ui_prerelease:
    name: "Robot: Spring '21"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -r requirements_dev.txt
    - name: Install sfdx
      run: |
        mkdir sfdx
        wget -qO- https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz | tar xJ -C sfdx --strip-components 1
        ./sfdx/install
        echo $SFDX_HUB_KEY_BASE64 | base64 --decode > sfdx.key
        sfdx force:auth:jwt:grant --clientid $SFDX_CLIENT_ID --jwtkeyfile sfdx.key --username $SFDX_HUB_USERNAME --setdefaultdevhubusername -a hub
      env:
        SFDX_HUB_KEY_BASE64: ${{ secrets.SFDX_HUB_KEY_BASE64 }}
        SFDX_CLIENT_ID: ${{ secrets.SFDX_CLIENT_ID }}
        SFDX_HUB_USERNAME: ${{ secrets.SFDX_HUB_USERNAME }}
    - name: Run robot tests
      run: |
        coverage run --append $(which cci) task run robot \
          --org prerelease \
          -o suites cumulusci/robotframework/tests/salesforce \
          -o exclude no-browser \
          -o vars BROWSER:headlesschrome
    - name: Delete scratch org
      if: always()
      run: |
        cci org scratch_delete prerelease
    - name: Report coverage
      run: coveralls
    - name: Store robot results
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: robot
        path: robot/CumulusCI/results

  coveralls_done:
    name: Finalize coveralls
    needs: [unit_tests, windows, robot_api, robot_ui_chrome, robot_ui_firefox]
    runs-on: ubuntu-latest
    steps:
    - run: curl -k https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN -d "payload[build_num]=$GITHUB_SHA&payload[status]=done"
